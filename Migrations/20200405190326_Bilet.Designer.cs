// <auto-generated />
using System;
using KinoEF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KinoEF.Migrations
{
    [DbContext(typeof(KinoContext))]
    [Migration("20200405190326_Bilet")]
    partial class Bilet
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KinoEF.Models.Bilet", b =>
                {
                    b.Property<int>("IdBiletu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<int?>("MiejsceIdMiejsca")
                        .HasColumnType("int");

                    b.HasKey("IdBiletu");

                    b.HasIndex("MiejsceIdMiejsca");

                    b.ToTable("Bilety");
                });

            modelBuilder.Entity("KinoEF.Models.Kino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazwaKina")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kina");
                });

            modelBuilder.Entity("KinoEF.Models.Miejsce", b =>
                {
                    b.Property<int>("IdMiejsca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Numer")
                        .HasColumnType("int");

                    b.Property<int>("Rzad")
                        .HasColumnType("int");

                    b.Property<int?>("SalaIdSali")
                        .HasColumnType("int");

                    b.HasKey("IdMiejsca");

                    b.HasIndex("SalaIdSali");

                    b.ToTable("Miejsca");
                });

            modelBuilder.Entity("KinoEF.Models.Sala", b =>
                {
                    b.Property<int>("IdSali")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KinoId")
                        .HasColumnType("int");

                    b.Property<int>("LiczbaMiejsc")
                        .HasColumnType("int");

                    b.Property<string>("NazwaSali")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSali");

                    b.HasIndex("KinoId");

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("KinoEF.Models.Bilet", b =>
                {
                    b.HasOne("KinoEF.Models.Miejsce", "Miejsce")
                        .WithMany("Bilety")
                        .HasForeignKey("MiejsceIdMiejsca");
                });

            modelBuilder.Entity("KinoEF.Models.Miejsce", b =>
                {
                    b.HasOne("KinoEF.Models.Sala", "Sala")
                        .WithMany("Miejsca")
                        .HasForeignKey("SalaIdSali");
                });

            modelBuilder.Entity("KinoEF.Models.Sala", b =>
                {
                    b.HasOne("KinoEF.Models.Kino", "Kino")
                        .WithMany("Sale")
                        .HasForeignKey("KinoId");
                });
#pragma warning restore 612, 618
        }
    }
}
